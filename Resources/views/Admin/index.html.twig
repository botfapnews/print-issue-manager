{% extends 'NewscoopNewscoopBundle::admin_layout.html.twig' %}

{% block admin_title %} {{ parent() }} - {{ 'plugin.printissuemanager.label.title'|trans }}{% endblock %}
{% block admin_page_title_content %}{{ 'plugin.printissuemanager.label.title'|trans }} - {{ 'plugin.printissuemanager.label.config'|trans }}{% endblock %}
{% block admin_stylesheets %}
<link rel="stylesheet" href="{{ asset('/bundles/newscoopnewscoop/css/bootstrap.css') }}">
<link rel="stylesheet" type="text/css" href="{{ asset('/bundles/newscoopnewscoop/css/DT_bootstrap.css') }}">
<link rel="stylesheet" type="text/css" href="{{ asset('/bundles/newscoopprintissuemanager/css/print-issue-manager.css') }}">
<link rel="stylesheet" type="text/css" href="{{ asset('/js/select2-3.4.1/select2.css') }}" />
{% endblock %}
{% block admin_scripts %}
<script src="{{ asset('/js/select2-3.4.1/select2.js') }}"></script>
<script type="text/javascript" src="{{ asset('/bundles/newscoopnewscoop/js/DT_bootstrap.js') }}"></script>

{% endblock %}
{% block admin_content %}
{% if iPadLinkParams is empty %}
<h5><div class="alert alert-info">{{ 'plugin.printissuemanager.msg.ipaderror'|trans }}</div></h5>
{% endif %}
<div class="plugin-container">
    <form id="choose-issue" action="" method="POST">
        <select class="mobile_issues aaselect form-control" style="width: 300px;">
            {% if issues is empty %}
                <option>{{ 'plugin.printissuemanager.label.noissues'|trans }}</option>
            {% else %}
                {% for article in issues %}
                <option data-number="{{ article.number }}" data-language="{{ article.languageId }}" value="{{ article.number }}_{{ article.languageId }}" data-content-box-href="">{{ article.name }}</option>
                {% endfor %}
            {% endif %}
        </select>
    </form>
    {% if iPadLinkParams %} 
        <div class="ipad-section">
            <h5>
                {{ 'plugin.printissuemanager.label.createnew'|trans }}
                <button type="button" class="btn btn-primary"><a href="/admin/articles/?f_publication_id={{ iPadLinkParams.publicationId}}&f_issue_number={{ iPadLinkParams.issueId}}&f_section_number={{ iPadLinkParams.number}}&f_language_id={{ iPadLinkParams.languageId}}">To the category iPad</a></button>
            </h5>
        </div> 
    {% endif %}
    <div style="clear:both"></div>
    {% if issues is not empty %}
    <hr />
    <form action="{{ path('newscoop_printissuemanager_admin_loadarticles') }}" class="loadArticles">
        <input type="hidden" name="context_box_id" class="context_box_id" value="">
        <input type="hidden" name="article_number" class="article_number" value="">
        <input type="hidden" name="article_language" class="article_language" value="">
        <fieldset class="buttons">
            <h4 style="float:left" class="choosen-issue-name">{{ 'plugin.printissuemanager.msg.loading'|trans }}</h3>

            <div style="float:right;">
                <button style="float:left; margin: 0px 10px;" type="submit" name="load-aricles" id="load-articles-button" class="btn btn-default">{{ 'plugin.printissuemanager.label.loadarticles'|trans }}</button>
                <div class="issues-range" style="float:left">
                    <label style="display: inline-block; float: left; margin-right: 5px; margin-top: 3px;" for="issues_range">{{ 'plugin.printissuemanager.label.from'|trans }} </label>
                    <select name="issues_range[]" id="issues-range" style="width:250px; margin-left: 35px;" multiple="multiple" class="aaselect form-control">
                    {% set i = 0 %}
                    {% for issue in latestPrintIssues %}
                        {% if i <= 4 %}
                            <option {% if i == 0 %} selected="selected" {% endif %}value="{{ issue.number }}_{{ issue.language.id }}">{{ issue.name }}</option>
                        {% endif %}
                        {% set i = i + 1 %}
                    {% endfor %}
                    </select>
                </div>
                <div class="content-box" style="float:left; margin-left: 20px">
                    <button class="iframe btn btn-primary" type="button" >{{ 'plugin.printissuemanager.btn.addarticles'|trans }}</button>
                </div>
            </div>
        </fieldset>
    </form>
    <div style="clear:both"></div>

    <table cellpadding="0" cellspacing="0" border="0" class="datatable sortable table table-striped table-bordered issueArticles">
        <thead>
            <tr>
                <th style="width: 70px">Delete</th>
                <th style="min-width: 280px;">Article title</th>
                <th style="min-width: 90px;">Webcode</th>
                <th style="width: 110px;">Article type</th>
                <th>Online section</th>
                <th>Printsection</th>
                <th>Printstory</th>
                <th style="width: 80px">Prominent</th>
                <th style="width: 70px">Preview</th>
                <th style="width: 70px">Save</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    {% endif %}
</div>
<script type="text/javascript">
$(document).ready(function() {
    /*$('select.mobile_issues').select2();
    $('select#issues-range').select2();*/
});
</script>
<script type="text/javascript">
    var printIssueManager = {
        tableData: null,
        currentIssue: null,
        dataToSave : {}
    };
    printIssueManager.utils = {
        getNewIssueData: function(issue_number, issue_language, callback){
            flashMessage(localizer.processing);
            $.ajax({
                type: "GET",
                url: "{{ path('newscoop_printissuemanager_admin_getissuearticles') }}",
                dataType: "json",
                data: { article_number: issue_number, article_language: issue_language }
            }).done(function(res) {
                printIssueManager.tableData = res.aaData;
                printIssueManager.currentIssue = res.issue;
                var frezze = '';
                if (printIssueManager.currentIssue.freeze == true) {
                    frezze = '<span style="color:red">Fertig gestellt</span> - ';
                }
                var status = '';
                var labelType = '';
                if (res.issue.status == 'P') {
                    status = '{{ 'plugin.printissuemanager.label.published'|trans }}';
                    labelType = "success";
                } else if (res.issue.status == 'S') {
                    status = '{{ 'plugin.printissuemanager.label.submitted'|trans }}';
                    labelType = "warning";
                }
                $('h4.choosen-issue-name').html('<a href="'+res.issue.url+'">'+frezze+res.issue.title+'</a> <span class="label label-'+labelType+'">'+status+'</span>');
                if (typeof callback === 'undefined') {
                    printIssueManager.utils.upadateTable($("table.issueArticles"), res);
                } else {
                    callback(res);
                }
            });
        },
        upadateTable: function(table, data){
            var issue = $('select.mobile_issues option:selected');
            var loadArticles = $('form.loadArticles');

            issue.data('contextId', data['contextBox']);
            $('.context_box_id', loadArticles).val(data['contextBox']);
            $('.article_number', loadArticles).val(data['issue']['number']);
            $('.article_language', loadArticles).val(data['issue']['language']);

            if (printIssueManager.currentIssue.freeze != true) {
                $("table.sortable tbody").sortable("enable");
            } else {
                $("table.sortable tbody").sortable("disable");
            }

            if (typeof relatedArticlesList != 'undefined') {
                relatedArticlesList.fnClearTable();
                relatedArticlesList.fnAddData(data.aaData);
                
                return true;
            }

            relatedArticlesList = table.dataTable({ 
                'aaData': printIssueManager.tableData,
                'sPaginationType': 'full_numbers',
                'bRetrieve': true,
                'bJQueryUI': false,
                'bAutoWidth': false,
                "bProcessing": true,
                "bFilter": false,
                "bSearchable":false,
                "bInfo":false,
                "aLengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": -1,
                fnRowCallback: function( nRow, aData, iDisplayIndex ) {
                    for(i=0; i < aData.length; i++) {
                        if(i == 0) {
                            $('td:eq('+i+')', nRow).html('<a href="{{ path('newscoop_printissuemanager_admin_removearticle') }}" data-article-id="'+aData[10]+'" data-article-id="'+aData[10]+'" data-language-id="'+aData[11]+'" class="remove"><?php echo getGS("Delete"); ?></a>');
                        }

                        if(i == 5) {
                            $('td:eq('+i+')', nRow).addClass('js-printsection').data('editable', false);
                        }

                        if(i == 6) {
                            $('td:eq('+i+')', nRow).addClass('js-printstory').data('editable', false);
                        }

                        if(i == 7) {
                            $('td:eq('+i+')', nRow).html('<input type="checkbox" class="js-prominent" name="prominent" value="1" />');
                            if(aData[i] == true) {
                                $('td:eq('+i+') input', nRow).attr('checked', true);
                            }
                        }

                        if(i == 8) {
                            $('td:eq('+i+')', nRow).html('<a href="'+aData[i]+'" class="preview"><?php echo getGS("Preview"); ?></a>');
                        }

                        if(i == 9) {
                            $('td:eq('+i+')', nRow).html('<a href="{{ path('newscoop_printissuemanager_admin_savearticles') }}" data-content-box-id="'+aData[10]+'" data-language-id="'+aData[11]+'" class="save-one"><?php echo getGS("Save"); ?></a>');
                        }
                    }

                    $(nRow).attr('id', aData[10]);
                    $(nRow).data('id', aData[10])
                    $(nRow).data('type', aData[3]);

                    $(nRow).width(table.width());

                    return nRow;
                },
                fnDrawCallback: function(){
                    $('.dataTables_length').hide();
                    $('.dataTables_paginate').parent().hide();
                },
                'aoColumnDefs': [ 
                    {"sClass": "center", "aTargets": [ 0, -1, -2, -3]},
                    { 'bSortable': false, 'aTargets': [ 0, 8, 9 ] }
                ]
            }).fnAdjustColumnSizing();
        },
        reorderArticles: function(table) {
            var issue = $('select.mobile_issues option:selected');
  
            flashMessage(localizer.processing);
            $.ajax({
                type: "POST",
                url: "{{ path('newscoop_printissuemanager_admin_updateorder') }}",
                dataType: "json",
                data: {
                    'context_box_articles': $('tbody', table).sortable('toArray'),
                    'content_box_id': issue.data('contextId'),
                    'article_number': printIssueManager.currentIssue['number'],
                    'article_language': printIssueManager.currentIssue['language']
                }
            }).done(function(res) {
                printIssueManager.tableData = res.aaData;
                printIssueManager.currentIssue = res.issue;
                printIssueManager.utils.upadateTable($("table.issueArticles"), res)
                flashMessage('<?php echo getGS("Saved.") ?>');
            });
        },
        loadArticles: function() {
            var issue = $('select.mobile_issues option:selected');
            var loadArticlesForm = $('form.loadArticles');

            flashMessage(localizer.processing);
            $.ajax({
                type: "POST",
                url: loadArticlesForm.attr('action'),
                dataType: "json",
                data: loadArticlesForm.serialize()
            }).done(function(res) {
                printIssueManager.tableData = res.aaData;
                printIssueManager.currentIssue = res.issue;
                printIssueManager.utils.upadateTable($("table.issueArticles"), res);
                flashMessage('<?php echo getGS("Articles loaded.") ?>');
            });
        },
        inlineEdit: function(element, addNewOne){
            var tableData = printIssueManager.utils.collectDataFromTable(relatedArticlesList);
            $(element).data('editable', true);

            if ($(element).hasClass('js-printsection')) {
                var printsectionOptions = [];
                var printsectionInput = $('<input type="text" name="printsection" placeholder="<?php echo getGS("Add new one"); ?>" value="" />');
                var printsectionSelect = $('<select name="printsection"><option value=""><?php echo getGS("Choose printsection"); ?></option></select>');
                var addNew = $('<div style="text-align:center"><a class="addNew" href="#"><?php echo getGs("Or add new")?></a></a>');
                var backToTheList = $('<div style="text-align:center"><a class="backToTheList" href="#"><?php echo getGs("Or back to the list")?></a></a>')

                for (var i = 0; i < tableData.length; i++) {
                    if (typeof tableData[i][5] != 'undefined' && tableData[i][5] != null && tableData[i][5].length > 0) {
                        if(printsectionOptions.indexOf(tableData[i][5]) == -1 || printsectionOptions.length == 0) {
                            var selected = "";
                            if (tableData[i][5] == $(element).html()) {
                                selected = 'selected="selected"';
                            }
                            printsectionSelect.append('<option '+selected+' value="'+tableData[i][5]+'">'+tableData[i][5]+'</option>');
                            printsectionOptions.push(tableData[i][5]);
                        }
                    }
                }

                if(printsectionOptions.length == 0 || (typeof addNewOne !== 'undefined' && addNewOne == 'addNewOne')) {
                    $(element).html(printsectionInput).append(backToTheList);
                } else {
                    $(element).html(printsectionSelect).append(addNew);
                }
            } else if($(element).hasClass('js-printstory')) {
                var printstoryOptions = [];
                var printstoryInput = $('<input type="text" name="printstory" placeholder="<?php echo getGS("Add new one"); ?>" value="" />');
                var printstorySelect = $('<select name="printstory"><option value=""><?php echo getGS("Choose printstory"); ?></option></select>');
                var addNew = $('<div style="text-align:center"><a class="addNew" href="#"><?php echo getGs("Or add new")?></a></a>');
                var backToTheList = $('<div style="text-align:center"><a class="backToTheList" href="#"><?php echo getGs("Or back to the list")?></a></a>')

                for (var i = 0; i < tableData.length; i++) {
                    if (typeof tableData[i][6] != 'undefined' && tableData[i][6] != null && tableData[i][6].length > 0) {
                        if(printstoryOptions.indexOf(tableData[i][6]) == -1 || printstoryOptions.length == 0) {
                            var selected = "";
                            if (tableData[i][6] == $(element).html()) {
                                selected = 'selected="selected"';
                            }
                            printstorySelect.append('<option '+selected+' value="'+tableData[i][6]+'">'+tableData[i][6]+'</option>');
                            printstoryOptions.push(tableData[i][6]);
                        }
                    }
                }

                if(printstoryOptions.length == 0 || (typeof addNewOne !== 'undefined' && addNewOne == 'addNewOne')) {
                    $(element).html(printstoryInput).append(backToTheList);
                } else {
                    $(element).html(printstorySelect).append(addNew);
                }
            }
        },
        updateTableData: function(element){
            var tableData = printIssueManager.utils.collectDataFromTable(relatedArticlesList);
            var updateForm = $('#formUpdateContainer form').clone();

            $('.js-id', updateForm).val(element.attr('id'));
            $('.js-language', updateForm).val($('a.save-one', element).data('languageId'));

            if ($('.js-printsection', element).data('editable') == true) {
                if($('.js-printsection select', element).length > 0) {
                    $('.js-printsection', updateForm).val($('.js-printsection select', element).val());
                } else {
                    $('.js-printsection', updateForm).val($('.js-printsection input', element).val());
                }
            }

            if ($('.js-printstory', element).data('editable') == true) {
                if($('.js-printstory select', element).length > 0) {
                    $('.js-printstory', updateForm).val($('.js-printstory select', element).val());
                } else {
                    $('.js-printstory', updateForm).val($('.js-printstory input', element).val());
                }
            } 

            if ($('.js-printsection', element).data('editable') != true) {
                $('.js-printsection', updateForm).val($('.js-printsection', element).html());
            }

            if ($('.js-printstory', element).data('editable') != true) {
                $('.js-printstory', updateForm).val($('.js-printstory', element).html());
            }
            
            $('.js-prominent', updateForm).val($('input.js-prominent:checked', element).val());

            if ($('input.js-prominent:checked', element).length == 0) {
                $('.js-prominent', updateForm).val('');
            }

            var rowData = updateForm.serializeArray();
            printIssueManager.dataToSave[rowData[0].value] = rowData;
        },
        hideInline: function(id) {
            var rowData = printIssueManager.dataToSave[id];
            var row = $("table.issueArticles tbody tr#"+id);

            for (var i = 0; i < rowData.length; i++) {
                if (rowData[i].name == "printsection") {
                    relatedArticlesList.fnUpdate( rowData[i].value, row[0], 5 );
                }

                if (rowData[i].name == "printstory") {
                    relatedArticlesList.fnUpdate( rowData[i].value, row[0], 6 );
                }

                if (rowData[i].name == "prominent") {
                    relatedArticlesList.fnUpdate( rowData[i].value, row[0], 7 );
                }
            }
        },
        collectDataFromTable : function(table) {
            return relatedArticlesList.fnGetData();
        },
        updateArticle: function(element, inline) {
            flashMessage(localizer.processing);
            if (typeof inline != 'undefined') {
                var data = {data: printIssueManager.dataToSave};
                var url = element.attr('action');
            } else {
                var data = printIssueManager.dataToSave[element.data('contentBoxId')];
                var url = element.attr('href');
            }

            $.ajax({
                type: "POST",
                url: url,
                dataType: "json",
                data: data,
            }).done(function(res) {
                flashMessage('<?php echo getGS("Article saved.") ?>');
            });
        },
        removeArticle: function(element) {
            flashMessage(localizer.processing);
            var url = element.attr('href');
            var issue = $('select.mobile_issues option:selected');
            var data = {
                'article_number' : element.data('articleId'),
                'context_box_id' : issue.data('contextId')
            }

            $.ajax({
                type: "POST",
                url: url,
                dataType: "json",
                data: data,
            }).done(function(res) {
                flashMessage('<?php echo getGS("Article removed.") ?>');
                relatedArticlesList.fnDeleteRow(element.parent().parent()[0]);
            });
        }
    };

    $('table.datatable').each(function(){
        var datatable = $(this);
        var search_input = datatable.closest('.dataTables_wrapper').find('div[id$=_filter] input');
        search_input.attr('placeholder', '{{ 'plugin.newsletter.label.search'|trans }}');
        search_input.addClass('form-control input-sm');
        var length_sel = datatable.closest('.dataTables_wrapper').find('div[id$=_length] select');
        length_sel.addClass('form-control input-sm');
    });

    $('select.mobile_issues').change(function(){
        var issue = $('select.mobile_issues option:selected');
        printIssueManager.utils.getNewIssueData(
            issue.data('number'), 
            issue.data('language')
        );
        $(".content-box button.iframe").attr('href', issue.data('contentBoxHref'));
    });

    $("table.sortable tbody").sortable({
        'axis': 'y',
        helper: function(e, tr)
        {
            var originals = tr.children();
            var helper = tr.clone();
            helper.children().each(function(index) {
                // Set helper cell sizes to match the original sizes
                $(this).width(originals.eq(index).width());
            });
            return helper;
        },
        update: function() {
            printIssueManager.utils.reorderArticles($("table.issueArticles"));
        }
    });

    $('select.mobile_issues').val($('select.mobile_issues option').first().val()).change();

    $('form.saveArticles').submit(function(e){
        printIssueManager.utils.updateArticle($(this), true);
        var data = printIssueManager.dataToSave;
        for (key in data) {
            printIssueManager.utils.hideInline(key);
            delete printIssueManager.dataToSave[key];
        }
        e.preventDefault();
    });

    $('form.loadArticles').submit(function(e){
        if (printIssueManager.currentIssue.freeze == true) {
            flashMessage('<?php echo getGS("This issue is freezed.") ?>', 'error');
            return false;
        }
        e.preventDefault();
        printIssueManager.utils.loadArticles();
    });

    $("table.issueArticles tr td a.addNew, table.issueArticles tr td a.backToTheList").live('click', function(e){
        if ($(this).hasClass('addNew')) {
            var option = 'addNewOne';
        } else {
            var option = 'backToTheList';
        }

        printIssueManager.utils.inlineEdit($(this).parent().parent(), option);
        e.preventDefault();
    });

    $("table.issueArticles tr td").live('click', function(){
        if ($(this).data('editable') == false) {
            printIssueManager.utils.inlineEdit($(this));
            printIssueManager.utils.updateTableData($(this).parent());
        }
    });

    $('.js-printsection select, .js-printstory select, .js-printsection input, .js-printstory input, input.js-prominent').live('change keydown', function(){
        printIssueManager.utils.updateTableData($(this).parent().parent());
    });

    $("table.issueArticles tr a.save-one").live('click', function(e){
        e.stopPropagation();
        e.preventDefault();
        printIssueManager.utils.hideInline($(this).data('contentBoxId'));
        printIssueManager.utils.updateArticle($(this));
    });

    $("table.issueArticles tr a.remove").live('click', function(e){
        e.stopPropagation();
        e.preventDefault();
        printIssueManager.utils.removeArticle($(this));
    });
    

    // fancybox for popups
    $('button.iframe').each(function() {
        if (!$(this).attr('custom')) {
            $(this).fancybox({
                hideOnContentClick: false,
                width: 800,
                height: 500,
                onClosed: function(url, params) {
                    if ($.fancybox.reload) { // reload if set
                        if ($.fancybox.message) { // set message after reload
                            $.cookie('flashMessage', $.fancybox.message);
                        }
                        window.location.reload();
                    } else if ($.fancybox.error) {
                        flashMessage($.fancybox.error, 'error');
                    }
                }
            });
        }
    });

    $(".content-box button.iframe").fancybox({
        'showCloseButton' : false,
        'width': 1150,
        'height'     : 700,
        'scrolling' : 'auto',
        'onClosed'      : function() {
            var issue = $('select.mobile_issues option:selected');
            printIssueManager.utils.getNewIssueData(
                issue.data('number'), 
                issue.data('language')
            );
        }
    });
</script>
{% endblock %}